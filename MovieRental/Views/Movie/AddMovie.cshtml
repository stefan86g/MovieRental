
@model MovieRental.Models.MovieViewModel

@{
    ViewBag.Title = "AddMovie";
}


<h2>AddMovie</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>MovieViewModel</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Picture, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Picture, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Picture, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Title,  new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Title,   new { @class = "form-control" } )
                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ReleaseDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ReleaseDate, new { htmlAttributes = new { @class = "", type = "date" } })
                @Html.ValidationMessageFor(model => model.ReleaseDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Genre, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
               @Html.DropDownListFor(model => model.Genre, new SelectList(
                  new List<Object>{
                        new SelectListItem {Text = "Drama", Value = "Drama"},
                        new SelectListItem {Text = "Action", Value = "Action"},
                        new SelectListItem {Text = "Comedy", Value = "Comedy"},
                        new SelectListItem {Text = "Fantasy", Value = "Fantasy"},
                        new SelectListItem {Text = "Horror", Value = "Horror"},
                        new SelectListItem {Text = "Science fiction", Value = "Science fiction"},
                        new SelectListItem {Text = "Other", Value = "Other"}
                    },
                  "value",
                  "text",
                   2))
                @Html.ValidationMessageFor(model => model.Genre, "", new { @class = "text-danger" })
            </div>
        </div>

      
        <div class="form-group">
            @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Availability, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.Availability, new SelectList(
                  new List<Object>{
                        new SelectListItem {Text = "Available", Value = "Available"},
                        new SelectListItem {Text = "Not Available", Value = "Not Available"},

                    },
                  "value",
                  "text",
                   2))
                @Html.ValidationMessageFor(model => model.Availability, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>

    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
    }
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
